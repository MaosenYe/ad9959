Here is a list of features to include

create a flask web interface to program the frequencies

Write a function into the dds.py file, which sets the gpclk on the raspberry pi to desired value

figure out how to kill class gracefully so the gpio and spi resources are properly released back to the OS

DONE: implement a set_frequency feature
DONE: also set amplitude and 
DONE: phase for each channel


DONE: look into changing the amount of current that each channel outputs (there are 4 current scales I believe, up to 15mA)

DONE: make an interface to the PLL clock multiplier, so you can have an internal clock of 200 MHz with an external clock of only 10 MHz.

DONE: change select_channel to be able to choose multiple channels, possibly by sending a list of channels as an argument



DONE:program frequency ramps. This involves setting a start and ending frequency tuning word, and a ramp rate.

IN PROGRESS: Write documentation for the library

More longterm features
DONE : 1) get the gpclk on the raspberry pi to work. (minimal_clk)